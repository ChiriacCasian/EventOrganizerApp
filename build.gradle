plugins {
	id 'org.kordamp.gradle.jacoco' version '0.54.0'
}

allprojects {
	repositories {
		mavenCentral()
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'checkstyle'
	apply plugin: 'jacoco'


	group = 'oopp'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '11'
	checkstyle {
		toolVersion "10.14.2"

		ignoreFailures = false
		maxErrors = 0
		maxWarnings = 0
		configFile = '../checkstyle.xml' as File
	}

	tasks.named('test') {
		useJUnitPlatform()
		finalizedBy jacocoTestReport
	}
	jacocoTestReport {
		reports {
			xml.required = false
			csv.required = false
			html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
		}
	}

	dependencies {
		implementation 'org.apache.commons:commons-lang3:3.12.0'
		implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
		implementation 'de.qaware.tools.openapi-generator-for-spring:openapi-generator-for-spring-starter:6.0.0'

		testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
		testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
		testImplementation 'org.mockito:mockito-core:5.11.0'
		testImplementation 'org.mockito:mockito-junit-jupiter:5.11.0'
		testImplementation 'org.testfx:testfx-core:4.0.17'
		testImplementation 'org.testfx:testfx-junit5:4.0.17'
		testImplementation 'org.hamcrest:hamcrest:2.2'
		testImplementation 'org.mockito:mockito-inline:2.13.0'
		testImplementation 'org.testfx:openjfx-monocle:21.0.2'
		testImplementation 'org.springframework.boot:spring-boot-starter-web:3.2.2'
		testImplementation 'org.springframework.boot:spring-boot-test-autoconfigure:3.2.2'
		testImplementation 'org.springframework:spring-test:6.1.5'

	}
}